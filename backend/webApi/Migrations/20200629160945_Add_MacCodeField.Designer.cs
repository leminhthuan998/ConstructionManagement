// <auto-generated />
using System;
using ConstructionApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConstructionApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200629160945_Add_MacCodeField")]
    partial class Add_MacCodeField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConstructionApp.Entity.CapPhoi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CatNhanTao")
                        .HasColumnType("float");

                    b.Property<double>("CatSong")
                        .HasColumnType("float");

                    b.Property<bool>("Check")
                        .HasColumnType("bit");

                    b.Property<double>("Da")
                        .HasColumnType("float");

                    b.Property<double>("Nuoc")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia1")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia2")
                        .HasColumnType("float");

                    b.Property<Guid>("ThongTinMeTronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TiTrong")
                        .HasColumnType("float");

                    b.Property<double>("XiMang")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ThongTinMeTronId")
                        .IsUnique();

                    b.ToTable("CapPhoi");
                });

            modelBuilder.Entity("ConstructionApp.Entity.HopDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChuDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CongTrinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MACId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NhaCungCapBeTong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaThau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHopDong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MACId");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.UserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.UserRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ConstructionApp.Entity.MAC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cat")
                        .HasColumnType("float");

                    b.Property<double>("Da")
                        .HasColumnType("float");

                    b.Property<string>("DoSut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Nuoc")
                        .HasColumnType("float");

                    b.Property<double>("PG")
                        .HasColumnType("float");

                    b.Property<string>("Tuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("XiMang")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MAC");
                });

            modelBuilder.Entity("ConstructionApp.Entity.SaiSo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CatSong")
                        .HasColumnType("float");

                    b.Property<double>("CatSong_1m3")
                        .HasColumnType("float");

                    b.Property<double>("Da")
                        .HasColumnType("float");

                    b.Property<double>("Da_1m3")
                        .HasColumnType("float");

                    b.Property<double>("Nuoc")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia1")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia1_1m3")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia2")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia2_1m3")
                        .HasColumnType("float");

                    b.Property<double>("SALT")
                        .HasColumnType("float");

                    b.Property<double>("SATT")
                        .HasColumnType("float");

                    b.Property<Guid>("ThongTinMeTronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TroBay")
                        .HasColumnType("float");

                    b.Property<double>("WCLT")
                        .HasColumnType("float");

                    b.Property<double>("WCTT")
                        .HasColumnType("float");

                    b.Property<double>("XiMang")
                        .HasColumnType("float");

                    b.Property<double>("XiMang_1m3")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ThongTinMeTronId")
                        .IsUnique();

                    b.ToTable("SaiSo");
                });

            modelBuilder.Entity("ConstructionApp.Entity.ThanhPhanMeTronCan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cat1")
                        .HasColumnType("float");

                    b.Property<double>("Cat2")
                        .HasColumnType("float");

                    b.Property<double>("Da1")
                        .HasColumnType("float");

                    b.Property<double>("Da2")
                        .HasColumnType("float");

                    b.Property<double>("Nuoc")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia1")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia2")
                        .HasColumnType("float");

                    b.Property<Guid>("ThongTinMeTronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TroBay")
                        .HasColumnType("float");

                    b.Property<double>("XiMang1")
                        .HasColumnType("float");

                    b.Property<double>("XiMang2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ThongTinMeTronId")
                        .IsUnique();

                    b.ToTable("ThanhPhanMeTronCan");
                });

            modelBuilder.Entity("ConstructionApp.Entity.ThanhPhanMeTronDat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cat1")
                        .HasColumnType("float");

                    b.Property<double>("Cat2")
                        .HasColumnType("float");

                    b.Property<double>("Da1")
                        .HasColumnType("float");

                    b.Property<double>("Da2")
                        .HasColumnType("float");

                    b.Property<double>("Nuoc")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia1")
                        .HasColumnType("float");

                    b.Property<double>("PhuGia2")
                        .HasColumnType("float");

                    b.Property<Guid>("ThongTinMeTronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TroBay")
                        .HasColumnType("float");

                    b.Property<double>("XiMang1")
                        .HasColumnType("float");

                    b.Property<double>("XiMang2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ThongTinMeTronId")
                        .IsUnique();

                    b.ToTable("ThanhPhanMeTronDat");
                });

            modelBuilder.Entity("ConstructionApp.Entity.ThongTinMeTron", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HopDongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("KhoiLuong")
                        .HasColumnType("float");

                    b.Property<Guid?>("MACId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTron")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HopDongId");

                    b.HasIndex("MACId");

                    b.HasIndex("VehicleId");

                    b.ToTable("ThongTinMeTron");
                });

            modelBuilder.Entity("ConstructionApp.Entity.VatTu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("InputWeight")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RealWeight")
                        .HasColumnType("float");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VatTu");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("ConstructionApp.Entity.CapPhoi", b =>
                {
                    b.HasOne("ConstructionApp.Entity.ThongTinMeTron", "ThongTinMeTron")
                        .WithOne("CapPhoi")
                        .HasForeignKey("ConstructionApp.Entity.CapPhoi", "ThongTinMeTronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionApp.Entity.HopDong", b =>
                {
                    b.HasOne("ConstructionApp.Entity.MAC", "MAC")
                        .WithMany()
                        .HasForeignKey("MACId");
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.RoleClaim", b =>
                {
                    b.HasOne("ConstructionApp.Entity.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionApp.Entity.Identity.UserRole", b =>
                {
                    b.HasOne("ConstructionApp.Entity.Identity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("ConstructionApp.Entity.Identity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionApp.Entity.SaiSo", b =>
                {
                    b.HasOne("ConstructionApp.Entity.ThongTinMeTron", "ThongTinMeTron")
                        .WithOne("SaiSo")
                        .HasForeignKey("ConstructionApp.Entity.SaiSo", "ThongTinMeTronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionApp.Entity.ThanhPhanMeTronCan", b =>
                {
                    b.HasOne("ConstructionApp.Entity.ThongTinMeTron", "ThongTinMeTron")
                        .WithOne("ThanhPhanMeTronCan")
                        .HasForeignKey("ConstructionApp.Entity.ThanhPhanMeTronCan", "ThongTinMeTronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionApp.Entity.ThanhPhanMeTronDat", b =>
                {
                    b.HasOne("ConstructionApp.Entity.ThongTinMeTron", "ThongTinMeTron")
                        .WithOne("ThanhPhanMeTronDat")
                        .HasForeignKey("ConstructionApp.Entity.ThanhPhanMeTronDat", "ThongTinMeTronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionApp.Entity.ThongTinMeTron", b =>
                {
                    b.HasOne("ConstructionApp.Entity.HopDong", "HopDong")
                        .WithMany()
                        .HasForeignKey("HopDongId");

                    b.HasOne("ConstructionApp.Entity.MAC", "MAC")
                        .WithMany()
                        .HasForeignKey("MACId");

                    b.HasOne("ConstructionApp.Entity.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });
#pragma warning restore 612, 618
        }
    }
}
